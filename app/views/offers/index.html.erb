<div class="map-box bg-color" id="map-box">
  <div class="panel panel-default white-bg">
    <div class="panel-heading">
      <h3>Mon quartier</h3>
    </div>
    <div class="panel-body padding-none">
      <div id="map"></div>
    </div>
  </div>
</div>

<div class="bg-color" id="sidebar">
  <div class="panel panel-default white-bg">
    <div class="panel-heading">
      <h3>Annonces</h3>
      <!-- <div class="btn-group">
        <ul class="list-unstyled list-inline">
          <li><a href="#" onclick="sortBy('', this); return false;">Trier par proximité</a></li>
          <li><a href="#" onclick="sortBy('_daily_price_asc', this); return false;">Trier par prix</a></li>
        </ul>
      </div> -->
    </div>
    <div class="panel-body padding-none">
      <div id="facets">
      </div>
      <div class="search-bar">
        <div class="input-group input-group m-t">
          <input type="text" name="q" id="q" autocomplete="off" spellcheck="false" autocorrect="false" class="form-control string" placeholder="Rechercher une annonce par nature, description..." />
          <span class="input-group-addon"><i class="fa fa-search"></i></span>
        </div>
      </div>
      <div id="hits">
      </div>
    </div>
  </div>
</div>

<% content_for(:js) do %>
  <%= javascript_tag do %>
    $(document).on('ready', function() {
      handler = Gmaps.build('Google');
      handler.buildMap({ internal: { id: 'map' } }, function(){
        markers = handler.addMarkers(<%= raw @markers.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
      });
    });
  <% end %>

  <%= javascript_tag do %>
    $(document).ready(function() {
      // Replace the following values by your ApplicationID and ApiKey.
      var algolia = new AlgoliaSearch(
        '<%= ENV['ALGOLIA_APPLICATION_ID'] %>',
        '<%= ENV['ALGOLIA_SEARCH_ONLY_API_KEY'] %>'
      );

      var $hits = $('#hits');
      var $q = $('#q');
      var $hitTemplate = Hogan.compile($('#hit-template').text());
      var $facets = $('#facets');
      var $facetTemplate = Hogan.compile($('#facet-template').text());

      var helper = new AlgoliaSearchHelper(algolia, 'Offer<%= ENV['ALGOLIA_SUFFIX']%>', {
        facets: [],
        // list of disjunctive facets (checkbox to refine)
        disjunctiveFacets: ['type_of_offer'],
        // number of results per page
        hitsPerPage: 20
      });

      function sortByCountDesc(a, b) { return b.count - a.count; }
      function sortByNumAsc(a, b) { return parseInt(a.label) - parseInt(b.label); }
      var FACETS = [
        { name: 'type_of_offer', title: 'Type' },
      ];

      var refinements = {};
      var minReviewsCount = 0;


      function searchCallback(success, content) {
        if (!success || content.query !== $q.val()) {
          // do not consider the result if there is an error
          // or if it is outdated -> query != $q.val()
          return;
        }

        var html = '';

        for (var i = 0; i < content.hits.length; ++i) {
          var url = "<%= offer_path(id: ":id") %>".replace(":id", content.hits[i].id);
          content.hits[i].url = url;
          var new_booking_url = "<%= new_offer_booking_path(offer_id: ":offer_id") %>".replace(":offer_id", content.hits[i].id);
          content.hits[i].new_booking_url = new_booking_url;
          html += $hitTemplate.render(content.hits[i]);
        }
        $hits.html(html);

        // facets: display the conjunctive+disjunctive facets
        html = '';
        var facetResult = null;
        var facetConfig = null;
        var isDisjunctive = null;

        for (var j=0; j<FACETS.length; ++j) {
          facetConfig = FACETS[j];
          facetResult = content['disjunctiveFacets'][facetConfig.name] || null;
          isDisjunctive = (content['disjunctiveFacets'][facetConfig.name]) ? true : false;

          if (facetResult) {

            // collect all values from `facetResult` to sort them by facetConfig.sortFunction
            var values = [];
            for (var v in facetResult) {
              values.push({ label: v, value: v, count: facetResult[v], refined: helper.isRefined(facetConfig.name, v) });
            }
            // sort the values
            values.sort(function(a, b) {
              // If topListIfRefined === true: sort by the refined states first (put them on top if they are refined).
              if (facetConfig.topListIfRefined) {
                if (a.refined !== b.refined) {
                  if (a.refined) return -1;
                  if (b.refined) return 1;
                }
              }

              // then fallback on the standard sort function
              return facetConfig.sortFunction(a,b);
            });

            // render the facet
            html += $facetTemplate.render({
              facet: facetConfig.name,
              title: facetConfig.title,
              values: values.slice(0, 10),
              has_other_values: values.length > 10,
              other_values: values.slice(10),
              disjunctive: isDisjunctive
            });
          }
        }
        $facets.html(html);



        // update URL anchor
        var refinements = [];
        for (var refine in helper.refinements) {
          if (helper.refinements[refine]) {
            var i = refine.indexOf(':');
            var r = {};
            r[refine.slice(0, i)] = refine.slice(i + 1);
            refinements.push(r);
          }
        }
        for (var refine in helper.disjunctiveRefinements) {
          for (var value in helper.disjunctiveRefinements[refine]) {
            if (helper.disjunctiveRefinements[refine][value]) {
              var r = {};
              r[refine] = value;
              refinements.push(r);
            }
          }
        }
        location.replace('#q=' + encodeURIComponent(content.query) + '&page=' + content.page + '&minReviewsCount=' + minReviewsCount + '&refinements=' + encodeURIComponent(JSON.stringify(refinements)));

        // scroll on top
        window.scrollTo(0, 0);
      }

      function search() {
        // perform the query
        helper.search($q.val(), searchCallback);
      }

      // input binding
      var lastQuery = $q.val();
      $q.on('keyup change', function() {
        if ($q.val() != lastQuery) {
          lastQuery = $q.val();
          // performing a new full-text query reset the pagination and the refinements
          minReviewsCount = 0;
          helper.setPage(0);
          helper.clearRefinements();
          search();
        }
      }).focus();

      // load results
      search();
    });
  <% end %>
  <script type="text/template" id="facet-template">
    TEST
  </script>
  <script type="text/template" id="hit-template">
    <div class="offer-stream-box">
      <div class="row">
        <div class="col-xs-1">
          <div class="img-nature-box">
            <a href="{{url}}">
              <%= image_tag("drill.png", width: "60") %>
            </a>
          </div>
        </div>
        <div class="col-xs-9 padding-left-30">
          <h4 class="margin-none"><a href="{{url}}" class="offer-nature-link">{{{ _highlightResult.nature.value }}}</a></h4>
          <p class="margin-top-10">{{{ _highlightResult.description.value }}} <a href="{{url}}">Voir l'annonce complète</a></p>
        </div>
        <div class="col-xs-2 text-right padding-top-15 padding-right-20">
          <h3 class="margin-none price">
            {{#daily_price}}
              {{ daily_price }}€
            {{/daily_price}}
            {{^daily_price}}
              {{#weekly_price}}
                {{ weekly_price }}€
              {{/weekly_price}}
              {{^weekly_price}}
                {{#hourly_price}}
                  {{ hourly_price }}€
                {{/hourly_price}}
                {{^hourly_price}}
                  {{ price }}€
                {{/hourly_price}}
              {{/weekly_price}}
            {{/daily_price}}
          </h3>
          <p>
            {{#daily_price}}
              / jour
            {{/daily_price}}
            {{^daily_price}}
              {{#weekly_price}}
                / semaine
              {{/weekly_price}}
              {{^weekly_price}}
                {{#hourly_price}}
                  / heure
                {{/hourly_price}}

              {{/weekly_price}}
            {{/daily_price}}
          </p>
        </div>
      </div>
      <div class="row">
        <div class="col-xs-1"></div>
        <div class="col-xs-11 padding-left-30">
          <ul class="list-unstyled list-inline">
            <li class="float-left">
              <a href="#" id="see-img">
                Voir photo
              </a>
            </li>
            <li class="float-right">
              <a href="{{ new_booking_url }}">
                <i class="fa fa-check"></i> Réserver
              </a>
            </li>
            <li class="float-right">
              <a href="#">
                <i class="fa fa-envelope"></i> Demande d'info
              </a>
            </li>
            <li class="float-right">
              <a href="#">
                <i class="fa fa-star"></i> Enregistrer
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </script>
  <!-- Hogan -->
  <script src="//cdn.jsdelivr.net/hogan.js/3.0.0/hogan.common.js"></script>
  <!-- Algolia -->
  <script src="//cdn.jsdelivr.net/algoliasearch/latest/algoliasearch.js"></script>
<% end %>